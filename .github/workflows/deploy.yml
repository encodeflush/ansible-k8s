name: Ansible deploy

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout kubesoray repo
      uses: actions/checkout@v2
      with:
        repository: kubernetes-sigs/kubespray
        ref: release-2.13 
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Install dependencies
      env:
        K8S_ENV: ${{secrets.K8s_ENV}}
      run: |
        pip install -r requirements.txt
        cp -rfp inventory/sample inventory/$K8S_ENV
    - name: Get ansible inventory 
      uses: actions-hub/gcloud@master
      env:
        PROJECT_ID: ${{secrets.GCLOUD_PROJECT_ID}}
        APPLICATION_CREDENTIALS: ${{secrets.GOOGLE_APPLICATION_CREDENTIALS}}
        K8S_ENV: ${{secrets.K8S_ENV}}
        OBJ_URI: ${{secrets.OBJ_URL}}
        CLI: gsutil
      with:
        args: list #cp $OBJ_URI ./inventory/$K8S_ENV/hosts.ini 
    - name: Set ansible config secrets
      env:
        ANSIBLE_VAULT_PASSWORD: ${{ secrets.ANSIBLE_VAULT_PASSWORD }}
        SSH_KEY: ${{ secrets.SSH_KEY }}
      run: |
        which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )
        which sshpass || ( apt-get update -y && apt-get install sshpass -y )
        mkdir -p ~/.ssh
        echo "$SSH_KEY" > ~/.ssh/id_rsa
        cat ~/.ssh/id_rsa
        #sed -i -e "s#\\\\n#\n#g" ~/.ssh/id_rsa
        #chmod 700 ~/.ssh/id_rsa
        #eval $(ssh-agent -s)
        #ssh-add ~/.ssh/id_rsa
        #[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
        #echo "$ANSIBLE_VAULT_PASSWORD" > .ansible-vault-password
    - name: Run kubepsray playbook
      env:
        K8S_ENV: ${{secrets.K8S_ENV}}
      run: |
        ansible-playbook --vault-password-file .ansible-vault-password -i inventory/K8S_ENV/hosts.ini  --become --become-user=root cluster.yml
